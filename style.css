* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: Arial, sans-serif;
    user-select: none;
}
body {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    background: #0f0c29; /* Dark blue background */
    overflow: hidden;
    position: relative;
}

/* Animated Background with Moving Stars */
.background-animation {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(125deg, #0f0c29, #24243e, #302b63);
    z-index: -1;
    overflow: hidden;
}

.background-animation::before {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    background-image: 
        radial-gradient(white, rgba(255,255,255,0) 2px),
        radial-gradient(white, rgba(255,255,255,0) 1px),
        radial-gradient(white, rgba(255,255,255,0) 3px);
    background-size: 550px 550px, 350px 350px, 250px 250px;
    background-position: 0 0, 40px 60px, 130px 270px;
    animation: stars-move 10s linear infinite;
}

@keyframes stars-move {
    0% {
        transform: translateY(0) translateX(0);
    }
    25% {
        transform: translateY(-5%) translateX(1%);
    }
    50% {
        transform: translateY(-10%) translateX(2%);
    }
    75% {
        transform: translateY(-5%) translateX(1%);
    }
    100% {
        transform: translateY(0) translateX(0);
    }
}
/* Calculator Container */
.calculator {
    width: 100%;
    max-width: 350px;
    background-color: rgba(16, 16, 36, 0.9);
    border-radius: 20px;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    box-shadow: 0 15px 35px rgba(0, 0, 0, 0.5);
    backdrop-filter: blur(10px);
    transform: translateY(20px);
    opacity: 0;
    animation: calculatorAppear 0.8s ease forwards;
    margin: auto; /* Added to ensure vertical centering */
}

@keyframes calculatorAppear {
    to {
        transform: translateY(0);
        opacity: 1;
    }
}

.display {
    display: flex;
    justify-content: flex-end;
    align-items: center;
    height: 120px; /* Reduced from 160px */
    padding: 0 20px;
    color: white;
    background: rgba(0, 0, 0, 0.3);
    position: relative;
    overflow: hidden;
}

.display::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(to bottom, rgba(255, 255, 255, 0.05), transparent);
    pointer-events: none;
}

.result {
    font-size: 54px; /* Reduced from 64px */
    font-weight: 300;
    text-align: right;
    text-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
}

.buttons {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: 10px; /* Reduced from 15px */
    padding: 15px; /* Reduced from 20px */
}

.btn {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 55px; /* Reduced from 60px */
    height: 55px; /* Reduced from 60px */
    border-radius: 50%;
    font-size: 22px; /* Reduced from 24px */
    border: none;
    outline: none;
    cursor: pointer;
    color: white;
    position: relative;
    overflow: hidden;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
}

.btn::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    background: rgba(255, 255, 255, 0.2);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    opacity: 0;
    transition: width 0.5s ease, height 0.5s ease, opacity 0.5s ease;
}

.btn:hover {
    transform: translateY(-3px);
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.4);
}

.btn:active::before {
    width: 120px;
    height: 120px;
    opacity: 1;
    transition: 0s;
}

.function {
    background: linear-gradient(135deg, #3a1c71, #6b1dad);
}

.number {
    background: linear-gradient(135deg, #192841, #293c5c);
}

.operator {
    background: linear-gradient(135deg, #6420aa, #8733e4);
    font-size: 26px; /* Reduced from 28px */
}

.equals {
    background: linear-gradient(135deg, #a01ddf, #de20d5);
    font-size: 26px; /* Reduced from 28px */
}

/* Button appear animation */
.btn {
    opacity: 0;
    transform: scale(0.8);
}

.buttons .btn:nth-child(1) { animation: buttonAppear 0.5s 0.1s forwards; }
.buttons .btn:nth-child(2) { animation: buttonAppear 0.5s 0.15s forwards; }
.buttons .btn:nth-child(3) { animation: buttonAppear 0.5s 0.2s forwards; }
.buttons .btn:nth-child(4) { animation: buttonAppear 0.5s 0.25s forwards; }
.buttons .btn:nth-child(5) { animation: buttonAppear 0.5s 0.3s forwards; }
.buttons .btn:nth-child(6) { animation: buttonAppear 0.5s 0.35s forwards; }
.buttons .btn:nth-child(7) { animation: buttonAppear 0.5s 0.4s forwards; }
.buttons .btn:nth-child(8) { animation: buttonAppear 0.5s 0.45s forwards; }
.buttons .btn:nth-child(9) { animation: buttonAppear 0.5s 0.5s forwards; }
.buttons .btn:nth-child(10) { animation: buttonAppear 0.5s 0.55s forwards; }
.buttons .btn:nth-child(11) { animation: buttonAppear 0.5s 0.6s forwards; }
.buttons .btn:nth-child(12) { animation: buttonAppear 0.5s 0.65s forwards; }
.buttons .btn:nth-child(13) { animation: buttonAppear 0.5s 0.7s forwards; }
.buttons .btn:nth-child(14) { animation: buttonAppear 0.5s 0.75s forwards; }
.buttons .btn:nth-child(15) { animation: buttonAppear 0.5s 0.8s forwards; }
.buttons .btn:nth-child(16) { animation: buttonAppear 0.5s 0.85s forwards; }
.buttons .btn:nth-child(17) { animation: buttonAppear 0.5s 0.9s forwards; }
.buttons .btn:nth-child(18) { animation: buttonAppear 0.5s 0.95s forwards; }
.buttons .btn:nth-child(19) { animation: buttonAppear 0.5s 1s forwards; }
.buttons .btn:nth-child(20) { animation: buttonAppear 0.5s 1.05s forwards; }

@keyframes buttonAppear {
    to {
        opacity: 1;
        transform: scale(1);
    }
}

/* Animation for button press */
@keyframes buttonPress {
    0% {
        transform: scale(1);
    }
    50% {
        transform: scale(0.92);
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);
    }
    100% {
        transform: scale(1);
    }
}

.animate {
    animation: buttonPress 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Animation for display update */
@keyframes resultUpdate {
    0% {
        opacity: 0.5;
        transform: translateY(10px);
    }
    100% {
        opacity: 1;
        transform: translateY(0);
    }
}

.updated {
    animation: resultUpdate 0.4s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Glow effect on hover */
.btn:hover::after {
    content: '';
    position: absolute;
    top: -5px;
    left: -5px;
    right: -5px;
    bottom: -5px;
    border-radius: 50%;
    background: transparent;
    border: 2px solid rgba(255, 255, 255, 0.2);
    box-shadow: 0 0 10px rgba(255, 255, 255, 0.2);
    animation: glowPulse 1.5s infinite;
    z-index: -1;
}

@keyframes glowPulse {
    0% {
        opacity: 0.5;
        transform: scale(1);
    }
    50% {
        opacity: 0.3;
        transform: scale(1.05);
    }
    100% {
        opacity: 0.5;
        transform: scale(1);
    }
}